/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.Market;

import Business.*;
import Business.Market.Market;
import Business.Market.MarketOffer;
import java.awt.CardLayout;
import java.awt.Component;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
/**
 *
 * @author Vaibhavi
 */
public class CreateMarketJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CreateMarketJPanel
     */
    private JPanel userProcessContainer;
    private Business business;
    
    public CreateMarketJPanel(JPanel userProcessContainer, Business business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.business = business;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        marketNameTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        createMarketBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        floorPriceTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        targetPriceTextField = new javax.swing.JTextField();
        ceilingPriceTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        commissionBelowTargetTextField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        commissionAboveTargetTextField = new javax.swing.JTextField();

        setBackground(new java.awt.Color(204, 204, 255));

        jLabel1.setBackground(new java.awt.Color(0, 102, 102));
        jLabel1.setFont(new java.awt.Font("Georgia", 1, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Create Market ");
        jLabel1.setOpaque(true);

        marketNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                marketNameTextFieldActionPerformed(evt);
            }
        });
        marketNameTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                marketNameTextFieldKeyTyped(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        jLabel2.setText("Market Name :");

        createMarketBtn.setBackground(new java.awt.Color(0, 102, 102));
        createMarketBtn.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        createMarketBtn.setForeground(new java.awt.Color(255, 255, 255));
        createMarketBtn.setText("Create");
        createMarketBtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.darkGray, null, null));
        createMarketBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createMarketBtnActionPerformed(evt);
            }
        });

        backBtn.setBackground(new java.awt.Color(102, 0, 0));
        backBtn.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        backBtn.setForeground(new java.awt.Color(255, 255, 255));
        backBtn.setText("<< Back");
        backBtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.darkGray, null, null));
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        jLabel3.setText("Floor Price % :");

        floorPriceTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                floorPriceTextFieldActionPerformed(evt);
            }
        });
        floorPriceTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                floorPriceTextFieldKeyTyped(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        jLabel4.setText("Target Price % :");

        targetPriceTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                targetPriceTextFieldActionPerformed(evt);
            }
        });
        targetPriceTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                targetPriceTextFieldKeyTyped(evt);
            }
        });

        ceilingPriceTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ceilingPriceTextFieldActionPerformed(evt);
            }
        });
        ceilingPriceTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ceilingPriceTextFieldKeyTyped(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        jLabel5.setText("Ceiling Price % :");

        jLabel6.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        jLabel6.setText("Commission Below Target % :");

        commissionBelowTargetTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commissionBelowTargetTextFieldActionPerformed(evt);
            }
        });
        commissionBelowTargetTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                commissionBelowTargetTextFieldKeyTyped(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        jLabel7.setText("Commission Above Target % :");

        commissionAboveTargetTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commissionAboveTargetTextFieldActionPerformed(evt);
            }
        });
        commissionAboveTargetTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                commissionAboveTargetTextFieldKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(65, 65, 65)
                                .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(96, 96, 96)
                                .addComponent(createMarketBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(57, 57, 57)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addGap(26, 26, 26)
                                        .addComponent(commissionAboveTargetTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel6)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel2))
                                        .addGap(26, 26, 26)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(marketNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(floorPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(targetPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(ceilingPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(commissionBelowTargetTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addGap(0, 12, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 75, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(marketNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(floorPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(targetPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ceilingPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(commissionBelowTargetTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(commissionAboveTargetTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(createMarketBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(70, 70, 70))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void createMarketBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createMarketBtnActionPerformed
        
        if(!marketNameTextField.getText().isEmpty() || floorPriceTextField.getText().isEmpty() 
           || ceilingPriceTextField.getText().isEmpty() || targetPriceTextField.getText().isEmpty()
           || commissionBelowTargetTextField.getText().isEmpty() || commissionAboveTargetTextField.getText().isEmpty())
        {
            Market market = business.getMarketDirectory().addMarket();
            MarketOffer marketOffer = business.getMarketOfferCatalog().addMarketOffer();
            
            market.setMarketType(marketNameTextField.getText());
            marketOffer.setFloorPrice(Double.parseDouble(floorPriceTextField.getText()));
            marketOffer.setTargetPrice(Double.parseDouble(targetPriceTextField.getText()));
            marketOffer.setCeilingPrice(Double.parseDouble(ceilingPriceTextField.getText()));
            marketOffer.setCommissionAboveTarget(Double.parseDouble(commissionAboveTargetTextField.getText()));
            marketOffer.setCommissionBelowTarget(Double.parseDouble(commissionBelowTargetTextField.getText()));
            JOptionPane.showMessageDialog(null, "Market created successfully.","Information",JOptionPane.INFORMATION_MESSAGE);
            resetFields();
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Please enter market name field.", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_createMarketBtnActionPerformed

    private void marketNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_marketNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_marketNameTextFieldActionPerformed

    private void marketNameTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_marketNameTextFieldKeyTyped
        
        char ch = evt.getKeyChar();
        if(!(Character.isAlphabetic(ch)) || (ch == KeyEvent.VK_BACK_SPACE) || (ch == KeyEvent.VK_DELETE))
        {
            evt.consume();
            if(Character.isDigit(ch) || Character.isSpaceChar(ch))
            JOptionPane.showMessageDialog(null,"Enter alphabetical values only.");
        }
    }//GEN-LAST:event_marketNameTextFieldKeyTyped

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length-1];
        ManageMarketJPanel manageMarketJPanel = (ManageMarketJPanel)component;
        manageMarketJPanel.populateTable();
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed

    private void floorPriceTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_floorPriceTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_floorPriceTextFieldActionPerformed

    private void floorPriceTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_floorPriceTextFieldKeyTyped
        
        char ch = evt.getKeyChar();
        if(!(Character.isDigit(ch)) || (ch == KeyEvent.VK_BACK_SPACE) || (ch == KeyEvent.VK_DELETE))
        {
            evt.consume();
            if(Character.isAlphabetic(ch) || Character.isSpaceChar(ch))
            JOptionPane.showMessageDialog(null,"Enter numerical values only.");
        }
    }//GEN-LAST:event_floorPriceTextFieldKeyTyped

    private void targetPriceTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_targetPriceTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_targetPriceTextFieldActionPerformed

    private void targetPriceTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_targetPriceTextFieldKeyTyped
        
        char ch = evt.getKeyChar();
        if(!(Character.isDigit(ch)) || (ch == KeyEvent.VK_BACK_SPACE) || (ch == KeyEvent.VK_DELETE))
        {
            evt.consume();
            if(Character.isAlphabetic(ch) || Character.isSpaceChar(ch))
            JOptionPane.showMessageDialog(null,"Enter numerical values only.");
        }
    }//GEN-LAST:event_targetPriceTextFieldKeyTyped

    private void ceilingPriceTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ceilingPriceTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ceilingPriceTextFieldActionPerformed

    private void ceilingPriceTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ceilingPriceTextFieldKeyTyped
        
        char ch = evt.getKeyChar();
        if(!(Character.isDigit(ch)) || (ch == KeyEvent.VK_BACK_SPACE) || (ch == KeyEvent.VK_DELETE))
        {
            evt.consume();
            if(Character.isAlphabetic(ch) || Character.isSpaceChar(ch))
            JOptionPane.showMessageDialog(null,"Enter numerical values only.");
        }
    }//GEN-LAST:event_ceilingPriceTextFieldKeyTyped

    private void commissionBelowTargetTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commissionBelowTargetTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_commissionBelowTargetTextFieldActionPerformed

    private void commissionBelowTargetTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_commissionBelowTargetTextFieldKeyTyped
        
        char ch = evt.getKeyChar();
        if(!(Character.isDigit(ch)) || (ch == KeyEvent.VK_BACK_SPACE) || (ch == KeyEvent.VK_DELETE))
        {
            evt.consume();
            if(Character.isAlphabetic(ch) || Character.isSpaceChar(ch))
            JOptionPane.showMessageDialog(null,"Enter numerical values only.");
        }
    }//GEN-LAST:event_commissionBelowTargetTextFieldKeyTyped

    private void commissionAboveTargetTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commissionAboveTargetTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_commissionAboveTargetTextFieldActionPerformed

    private void commissionAboveTargetTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_commissionAboveTargetTextFieldKeyTyped
        
        char ch = evt.getKeyChar();
        if(!(Character.isDigit(ch)) || (ch == KeyEvent.VK_BACK_SPACE) || (ch == KeyEvent.VK_DELETE))
        {
            evt.consume();
            if(Character.isAlphabetic(ch) || Character.isSpaceChar(ch))
            JOptionPane.showMessageDialog(null,"Enter numerical values only.");
        }
    }//GEN-LAST:event_commissionAboveTargetTextFieldKeyTyped

    public void resetFields()
    {
        marketNameTextField.setText("");
        floorPriceTextField.setText("");
        targetPriceTextField.setText("");
        ceilingPriceTextField.setText("");
        commissionBelowTargetTextField.setText("");
        commissionAboveTargetTextField.setText("");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JTextField ceilingPriceTextField;
    private javax.swing.JTextField commissionAboveTargetTextField;
    private javax.swing.JTextField commissionBelowTargetTextField;
    private javax.swing.JButton createMarketBtn;
    private javax.swing.JTextField floorPriceTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField marketNameTextField;
    private javax.swing.JTextField targetPriceTextField;
    // End of variables declaration//GEN-END:variables
}
